class Solver_8_queens:

    def __init__(self, pop_size = 100, cross_prob = 0.50, mut_prob = 0.25):
        """
        :param pop_size: размер популяции
        :param cross_prob: вероятность скрещивания (0..1)
        :param mut_prob: вероятность мутации (0..1)

            Для каждого аргумента необходимо подобрать значение по умолчанию таким
        образом, чтобы генетический алгоритм решал задачу наилучшим образом.
        """


    def solve(self, min_fitness = 0.9, max_epochs = 100):
        """
        :param min_fitness: пороговое знаение фитнес-функции наиболее
            приспособленной особи в популяции, при превышении которого
            алгоритм останавливается
        :param max_epochs: максимальное количество эпох (итераций) генетического
            алгоритма, при превышении которого он останавливается

            Если оба аргумента имеют значения отличные от None, то алгоритм
        должен останавливаться при срабатывании любого из критериев останова
            Если только один аргумент имеет значение отличное от None, то
        алгоритм должен устанавливаться только при срабатывании этого критерия

        :return:
            best_fit: значение фитнес-функции для наиболее приспособленной особи
                в популяции
            epoch_num: количество эпох (итераций), прошедших до остановки
                генетического алгоритма
            visualization: текстовая строка, содержащая интерпретацию
                (визуализацию шахматной доски) решения, соответсвующего наиболее
                приспособленной особи

            Следует придерживаться стиля отображения, при котором пустые клетки
        шахматной доски отображаются символом '+', а ферзи - символом 'Q'
        """